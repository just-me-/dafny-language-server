//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DafnyLanguageServer.Resources {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ExceptionMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ExceptionMessages() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DafnyLanguageServer.Resources.ExceptionMessages", typeof(ExceptionMessages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die When symbol is a declaration, it cannot be a usage of itself. ähnelt.
        /// </summary>
        internal static string cannot_use_itself {
            get {
                return ResourceManager.GetString("cannot_use_itself", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Can not add usage at unknown symbol. ähnelt.
        /// </summary>
        internal static string cannot_use_unknown_symbol {
            get {
                return ResourceManager.GetString("cannot_use_unknown_symbol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This auto completion desire is not yet supported. ähnelt.
        /// </summary>
        internal static string completion_not_yet_supported {
            get {
                return ResourceManager.GetString("completion_not_yet_supported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error while parsing json config. ähnelt.
        /// </summary>
        internal static string config_could_not_be_parsed {
            get {
                return ResourceManager.GetString("config_could_not_be_parsed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The file Config/LanguageServerConfig.json file could not be located. ähnelt.
        /// </summary>
        internal static string config_file_not_existing {
            get {
                return ResourceManager.GetString("config_file_not_existing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Config file not found at: ähnelt.
        /// </summary>
        internal static string config_file_not_found {
            get {
                return ResourceManager.GetString("config_file_not_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error while collecting (counter example) models. ähnelt.
        /// </summary>
        internal static string could_not_collect_models {
            get {
                return ResourceManager.GetString("could_not_collect_models", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error while executing compilation. ähnelt.
        /// </summary>
        internal static string could_not_execute_compilation {
            get {
                return ResourceManager.GetString("could_not_execute_compilation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Specific model does not contain a [ :initial state ]. ähnelt.
        /// </summary>
        internal static string counter_example_no_init_state {
            get {
                return ResourceManager.GetString("counter_example_no_init_state", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Internal Error constructing DTU: PhysicalFile must not be null. ähnelt.
        /// </summary>
        internal static string DTU_no_physical_file_given {
            get {
                return ResourceManager.GetString("DTU_no_physical_file_given", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A DafnyTranslationUnit can only be used once. Create a new one! ähnelt.
        /// </summary>
        internal static string DTU_only_use_once {
            get {
                return ResourceManager.GetString("DTU_only_use_once", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cursor position is exceeding line width. ähnelt.
        /// </summary>
        internal static string file_cursor_exceed_line_width {
            get {
                return ResourceManager.GetString("file_cursor_exceed_line_width", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A Filerepository must habe a Physical File but it wasn&apos;t the case. ähnelt.
        /// </summary>
        internal static string file_repo_must_have_physical {
            get {
                return ResourceManager.GetString("file_repo_must_have_physical", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Global Class Scope was not registered. ähnelt.
        /// </summary>
        internal static string global_class_not_registered {
            get {
                return ResourceManager.GetString("global_class_not_registered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid Filter Operation - no results were found but at least one was expected. ähnelt.
        /// </summary>
        internal static string invalid_filter_operation {
            get {
                return ResourceManager.GetString("invalid_filter_operation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid Module given to deep visitor as entry point. ähnelt.
        /// </summary>
        internal static string invalid_module_handed_to_deep_visitor {
            get {
                return ResourceManager.GetString("invalid_module_handed_to_deep_visitor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Loglevel must be between 0 and 6. ähnelt.
        /// </summary>
        internal static string level_out_of_bounds {
            get {
                return ResourceManager.GetString("level_out_of_bounds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die LogLevel exceeds limits. Must be between 0 and 6. Setting to default LogLevel 4 = Error. ähnelt.
        /// </summary>
        internal static string loglevel_illegal {
            get {
                return ResourceManager.GetString("loglevel_illegal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die When symbol is not a declaration, its declarationOrigin must be given. ähnelt.
        /// </summary>
        internal static string missing_delcaration_origin {
            get {
                return ResourceManager.GetString("missing_delcaration_origin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Line index must not be negative. ähnelt.
        /// </summary>
        internal static string negativ_line {
            get {
                return ResourceManager.GetString("negativ_line", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No Argument provided for switch  ähnelt.
        /// </summary>
        internal static string no_arg_for_switch {
            get {
                return ResourceManager.GetString("no_arg_for_switch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No class origin was found for symbol:  ähnelt.
        /// </summary>
        internal static string no_class_origin_found {
            get {
                return ResourceManager.GetString("no_class_origin_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Symbol before dot has not been found. ähnelt.
        /// </summary>
        internal static string no_symbol_before_fot_found {
            get {
                return ResourceManager.GetString("no_symbol_before_fot_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There are not enough lines in the given source. ähnelt.
        /// </summary>
        internal static string not_enough_lines {
            get {
                return ResourceManager.GetString("not_enough_lines", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error parsing launch arguments. Please refer to the readme.md ähnelt.
        /// </summary>
        internal static string not_supported_launch_args {
            get {
                return ResourceManager.GetString("not_supported_launch_args", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die StreamRedirection and Log must not be the same files. ähnelt.
        /// </summary>
        internal static string stream_and_log_are_same {
            get {
                return ResourceManager.GetString("stream_and_log_are_same", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A Symbol Entrypoint must be set for navigator methods. It must not be null. ähnelt.
        /// </summary>
        internal static string symbol_entrypoint_must_be_set {
            get {
                return ResourceManager.GetString("symbol_entrypoint_must_be_set", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid class path... expected Module.Class pattern. ähnelt.
        /// </summary>
        internal static string tmp_invalid_class_path {
            get {
                return ResourceManager.GetString("tmp_invalid_class_path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Every Symbol must have a token. ähnelt.
        /// </summary>
        internal static string token_requires {
            get {
                return ResourceManager.GetString("token_requires", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Expected string or TextDocumentChangeEvent-Container at text-document-change event request. ähnelt.
        /// </summary>
        internal static string unexpected_file_type {
            get {
                return ResourceManager.GetString("unexpected_file_type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown switch: &apos;{0}&apos;. Please refer to readme.md ähnelt.
        /// </summary>
        internal static string unknown_switch {
            get {
                return ResourceManager.GetString("unknown_switch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This visitor must only visit declarations. ähnelt.
        /// </summary>
        internal static string visit_only_declarations {
            get {
                return ResourceManager.GetString("visit_only_declarations", resourceCulture);
            }
        }
    }
}
