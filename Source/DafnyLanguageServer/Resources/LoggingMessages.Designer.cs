//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DafnyLanguageServer.Resources {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class LoggingMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal LoggingMessages() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DafnyLanguageServer.Resources.LoggingMessages", typeof(LoggingMessages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not redirect output stream.  ähnelt.
        /// </summary>
        public static string could_not_redirect_outputstream {
            get {
                return ResourceManager.GetString("could_not_redirect_outputstream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error while setting up config. Some Defaults may be in use. ähnelt.
        /// </summary>
        public static string could_not_setup_config {
            get {
                return ResourceManager.GetString("could_not_setup_config", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Logical Error:  ähnelt.
        /// </summary>
        public static string diagnostic_logical_error {
            get {
                return ResourceManager.GetString("diagnostic_logical_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Syntax Error:  ähnelt.
        /// </summary>
        public static string diagnostic_syntax_error {
            get {
                return ResourceManager.GetString("diagnostic_syntax_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error Message: ähnelt.
        /// </summary>
        public static string error_msg {
            get {
                return ResourceManager.GetString("error_msg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This is already the definition. ähnelt.
        /// </summary>
        public static string goto_alreadyIsDef {
            get {
                return ResourceManager.GetString("goto_alreadyIsDef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current Dafny file is not valid. This affects functionality. ähnelt.
        /// </summary>
        public static string goto_fileNotValid {
            get {
                return ResourceManager.GetString("goto_fileNotValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No Defintion found. ähnelt.
        /// </summary>
        public static string goto_notfound {
            get {
                return ResourceManager.GetString("goto_notfound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No Defintion found for {0} at L{1}:C{2} ähnelt.
        /// </summary>
        public static string goto_notfound_at {
            get {
                return ResourceManager.GetString("goto_notfound_at", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Declaration ähnelt.
        /// </summary>
        public static string hover_declaration {
            get {
                return ResourceManager.GetString("hover_declaration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This symbol is the declaration. ähnelt.
        /// </summary>
        public static string hover_isDeclaration {
            get {
                return ResourceManager.GetString("hover_isDeclaration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Kind ähnelt.
        /// </summary>
        public static string hover_kind {
            get {
                return ResourceManager.GetString("hover_kind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scope ähnelt.
        /// </summary>
        public static string hover_scope {
            get {
                return ResourceManager.GetString("hover_scope", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Type ähnelt.
        /// </summary>
        public static string hover_type {
            get {
                return ResourceManager.GetString("hover_type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die N/A ähnelt.
        /// </summary>
        public static string hover_unknown {
            get {
                return ResourceManager.GetString("hover_unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Inner Error:  ähnelt.
        /// </summary>
        public static string inner_error {
            get {
                return ResourceManager.GetString("inner_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There is no renameable symbol at ähnelt.
        /// </summary>
        public static string rename_no_symbol {
            get {
                return ResourceManager.GetString("rename_no_symbol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  is not valid. Use only letters, digits and underscores. ähnelt.
        /// </summary>
        public static string rename_only_digits {
            get {
                return ResourceManager.GetString("rename_only_digits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  is a reserved word. ähnelt.
        /// </summary>
        public static string rename_reserved_word {
            get {
                return ResourceManager.GetString("rename_reserved_word", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An identifier must not start with a number. ähnelt.
        /// </summary>
        public static string rename_start_with_number {
            get {
                return ResourceManager.GetString("rename_start_with_number", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IDentifier names must not start with an underscore. ähnelt.
        /// </summary>
        public static string rename_start_with_underscore {
            get {
                return ResourceManager.GetString("rename_start_with_underscore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error: Internal server error while handling {0} ähnelt.
        /// </summary>
        public static string request_error {
            get {
                return ResourceManager.GetString("request_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Handling {0}... ähnelt.
        /// </summary>
        public static string request_handle {
            get {
                return ResourceManager.GetString("request_handle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} successfully handled ähnelt.
        /// </summary>
        public static string request_success {
            get {
                return ResourceManager.GetString("request_success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Updating File:  ähnelt.
        /// </summary>
        public static string request_update {
            get {
                return ResourceManager.GetString("request_update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Calculating Diagnostics... ähnelt.
        /// </summary>
        public static string request_update_diagnostics {
            get {
                return ResourceManager.GetString("request_update_diagnostics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server closed. ähnelt.
        /// </summary>
        public static string server_closed {
            get {
                return ResourceManager.GetString("server_closed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server is running. ähnelt.
        /// </summary>
        public static string server_running {
            get {
                return ResourceManager.GetString("server_running", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server is starting... ähnelt.
        /// </summary>
        public static string server_starting {
            get {
                return ResourceManager.GetString("server_starting", resourceCulture);
            }
        }
    }
}
